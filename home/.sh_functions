#!/usr/bin/env sh

addpath() {
    # Add given paths to system path
    _new_path="$("${DOTFILES_DIR}/scripts/sys_path_append" "$@")"
    if [ -n "${_new_path}" ]; then
        export PATH="${_new_path}"
    fi
}

bak() {
    # Create backups of the given files
    for file_path in "$@"; do
        cp "${file_path}" "${file_path}.bak" || :
    done
}

cd_and_ls() {
    # Change directory and print its contents
    new_dir="$*"
    if [ $# -lt 1 ]; then
        new_dir=$HOME
    fi
    builtin cd "${new_dir}" && ls
}

if [ -n "$(command -v fzf)" ] && [ -n "$(command -v fd)" ]; then
    cd_with_fzf() {
        # Use fd to list directories and choose one to cd into using fzf
        root_dir="${1-$(pwd)}"
        if ! [ -d "${root_dir}" ]; then
            >&2 echo "no such directory: '${root_dir}'"
            return 1
        fi
        cd "$(fd . -t d "${root_dir}" | fzf --scheme path)" || return 2
    }
fi

cpath() {
    # Copy the given file's full path to the clipboard
    if [ "$1" = "" ]; then
        _path="$(pwd)"
    else
        _path="$(realpath "$1")"
    fi

    # Note 'clipr' is defined in '.sh_aliases'
    if command -v clipr >/dev/null 2>&1; then
        printf '%s' "${_path}" | clipr
        echo "'${_path}' copied to clipboard"
    else
        >&2 echo "dotfiles: could not find executable to copy with"
        return 1
    fi
}

current_shell() {
    # Get the name of the current shell.
    ps -p "$$" | tail -n1 | xargs | cut -d' ' -f4 | tr -d '-'
}

mkdir_and_cd() {
    # Make a directory and cd into it
    mkdir "$1"
    cd "$1" || return
}

if [ -n "$(command -v fzf)" ]; then
    psi() {
        # Interactively choose a process ID
        ps -aux | fzf | tr -s ' ' | cut -d' ' -f2
    }
fi
